// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/api/component/base/v1/base.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto.Api.Component.Base.V1 {
  public static partial class BaseService
  {
    static readonly string __ServiceName = "proto.api.component.base.v1.BaseService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.MoveStraightRequest> __Marshaller_proto_api_component_base_v1_MoveStraightRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.MoveStraightRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.MoveStraightResponse> __Marshaller_proto_api_component_base_v1_MoveStraightResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.MoveStraightResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.SpinRequest> __Marshaller_proto_api_component_base_v1_SpinRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.SpinRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.SpinResponse> __Marshaller_proto_api_component_base_v1_SpinResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.SpinResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.SetPowerRequest> __Marshaller_proto_api_component_base_v1_SetPowerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.SetPowerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.SetPowerResponse> __Marshaller_proto_api_component_base_v1_SetPowerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.SetPowerResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.SetVelocityRequest> __Marshaller_proto_api_component_base_v1_SetVelocityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.SetVelocityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.SetVelocityResponse> __Marshaller_proto_api_component_base_v1_SetVelocityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.SetVelocityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.StopRequest> __Marshaller_proto_api_component_base_v1_StopRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.StopRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Base.V1.StopResponse> __Marshaller_proto_api_component_base_v1_StopResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Base.V1.StopResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Base.V1.MoveStraightRequest, global::Proto.Api.Component.Base.V1.MoveStraightResponse> __Method_MoveStraight = new grpc::Method<global::Proto.Api.Component.Base.V1.MoveStraightRequest, global::Proto.Api.Component.Base.V1.MoveStraightResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MoveStraight",
        __Marshaller_proto_api_component_base_v1_MoveStraightRequest,
        __Marshaller_proto_api_component_base_v1_MoveStraightResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Base.V1.SpinRequest, global::Proto.Api.Component.Base.V1.SpinResponse> __Method_Spin = new grpc::Method<global::Proto.Api.Component.Base.V1.SpinRequest, global::Proto.Api.Component.Base.V1.SpinResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Spin",
        __Marshaller_proto_api_component_base_v1_SpinRequest,
        __Marshaller_proto_api_component_base_v1_SpinResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Base.V1.SetPowerRequest, global::Proto.Api.Component.Base.V1.SetPowerResponse> __Method_SetPower = new grpc::Method<global::Proto.Api.Component.Base.V1.SetPowerRequest, global::Proto.Api.Component.Base.V1.SetPowerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPower",
        __Marshaller_proto_api_component_base_v1_SetPowerRequest,
        __Marshaller_proto_api_component_base_v1_SetPowerResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Base.V1.SetVelocityRequest, global::Proto.Api.Component.Base.V1.SetVelocityResponse> __Method_SetVelocity = new grpc::Method<global::Proto.Api.Component.Base.V1.SetVelocityRequest, global::Proto.Api.Component.Base.V1.SetVelocityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetVelocity",
        __Marshaller_proto_api_component_base_v1_SetVelocityRequest,
        __Marshaller_proto_api_component_base_v1_SetVelocityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Base.V1.StopRequest, global::Proto.Api.Component.Base.V1.StopResponse> __Method_Stop = new grpc::Method<global::Proto.Api.Component.Base.V1.StopRequest, global::Proto.Api.Component.Base.V1.StopResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_proto_api_component_base_v1_StopRequest,
        __Marshaller_proto_api_component_base_v1_StopResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Api.Component.Base.V1.BaseReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of BaseService</summary>
    [grpc::BindServiceMethod(typeof(BaseService), "BindService")]
    public abstract partial class BaseServiceBase
    {
      /// <summary>
      /// MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
      /// and a given speed, expressed in millimeters per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Base.V1.MoveStraightResponse> MoveStraight(global::Proto.Api.Component.Base.V1.MoveStraightRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Spin spins a robot's base by an given angle, expressed in degrees, and a given
      /// angular speed, expressed in degrees per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Base.V1.SpinResponse> Spin(global::Proto.Api.Component.Base.V1.SpinRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SetPower sets the linear and angular power of a base
      /// -1 -> 1 in terms of power for each direction
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Base.V1.SetPowerResponse> SetPower(global::Proto.Api.Component.Base.V1.SetPowerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// SetVelocity sets the linear and angular velocity of a base
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Base.V1.SetVelocityResponse> SetVelocity(global::Proto.Api.Component.Base.V1.SetVelocityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Stop stops a robot's base
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Base.V1.StopResponse> Stop(global::Proto.Api.Component.Base.V1.StopRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BaseService</summary>
    public partial class BaseServiceClient : grpc::ClientBase<BaseServiceClient>
    {
      /// <summary>Creates a new client for BaseService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BaseServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BaseService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BaseServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BaseServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BaseServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
      /// and a given speed, expressed in millimeters per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.MoveStraightResponse MoveStraight(global::Proto.Api.Component.Base.V1.MoveStraightRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveStraight(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
      /// and a given speed, expressed in millimeters per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.MoveStraightResponse MoveStraight(global::Proto.Api.Component.Base.V1.MoveStraightRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MoveStraight, null, options, request);
      }
      /// <summary>
      /// MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
      /// and a given speed, expressed in millimeters per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.MoveStraightResponse> MoveStraightAsync(global::Proto.Api.Component.Base.V1.MoveStraightRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveStraightAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// MoveStraight moves a robot's base in a straight line by a given distance, expressed in millimeters
      /// and a given speed, expressed in millimeters per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.MoveStraightResponse> MoveStraightAsync(global::Proto.Api.Component.Base.V1.MoveStraightRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MoveStraight, null, options, request);
      }
      /// <summary>
      /// Spin spins a robot's base by an given angle, expressed in degrees, and a given
      /// angular speed, expressed in degrees per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.SpinResponse Spin(global::Proto.Api.Component.Base.V1.SpinRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Spin(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Spin spins a robot's base by an given angle, expressed in degrees, and a given
      /// angular speed, expressed in degrees per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.SpinResponse Spin(global::Proto.Api.Component.Base.V1.SpinRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Spin, null, options, request);
      }
      /// <summary>
      /// Spin spins a robot's base by an given angle, expressed in degrees, and a given
      /// angular speed, expressed in degrees per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.SpinResponse> SpinAsync(global::Proto.Api.Component.Base.V1.SpinRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SpinAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Spin spins a robot's base by an given angle, expressed in degrees, and a given
      /// angular speed, expressed in degrees per second
      /// This method blocks until completed or cancelled
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.SpinResponse> SpinAsync(global::Proto.Api.Component.Base.V1.SpinRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Spin, null, options, request);
      }
      /// <summary>
      /// SetPower sets the linear and angular power of a base
      /// -1 -> 1 in terms of power for each direction
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.SetPowerResponse SetPower(global::Proto.Api.Component.Base.V1.SetPowerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPower(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetPower sets the linear and angular power of a base
      /// -1 -> 1 in terms of power for each direction
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.SetPowerResponse SetPower(global::Proto.Api.Component.Base.V1.SetPowerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPower, null, options, request);
      }
      /// <summary>
      /// SetPower sets the linear and angular power of a base
      /// -1 -> 1 in terms of power for each direction
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.SetPowerResponse> SetPowerAsync(global::Proto.Api.Component.Base.V1.SetPowerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPowerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetPower sets the linear and angular power of a base
      /// -1 -> 1 in terms of power for each direction
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.SetPowerResponse> SetPowerAsync(global::Proto.Api.Component.Base.V1.SetPowerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPower, null, options, request);
      }
      /// <summary>
      /// SetVelocity sets the linear and angular velocity of a base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.SetVelocityResponse SetVelocity(global::Proto.Api.Component.Base.V1.SetVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetVelocity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetVelocity sets the linear and angular velocity of a base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.SetVelocityResponse SetVelocity(global::Proto.Api.Component.Base.V1.SetVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetVelocity, null, options, request);
      }
      /// <summary>
      /// SetVelocity sets the linear and angular velocity of a base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.SetVelocityResponse> SetVelocityAsync(global::Proto.Api.Component.Base.V1.SetVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetVelocityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// SetVelocity sets the linear and angular velocity of a base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.SetVelocityResponse> SetVelocityAsync(global::Proto.Api.Component.Base.V1.SetVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetVelocity, null, options, request);
      }
      /// <summary>
      /// Stop stops a robot's base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.StopResponse Stop(global::Proto.Api.Component.Base.V1.StopRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stop stops a robot's base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Base.V1.StopResponse Stop(global::Proto.Api.Component.Base.V1.StopRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>
      /// Stop stops a robot's base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.StopResponse> StopAsync(global::Proto.Api.Component.Base.V1.StopRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stop stops a robot's base
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Base.V1.StopResponse> StopAsync(global::Proto.Api.Component.Base.V1.StopRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BaseServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BaseServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BaseServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_MoveStraight, serviceImpl.MoveStraight)
          .AddMethod(__Method_Spin, serviceImpl.Spin)
          .AddMethod(__Method_SetPower, serviceImpl.SetPower)
          .AddMethod(__Method_SetVelocity, serviceImpl.SetVelocity)
          .AddMethod(__Method_Stop, serviceImpl.Stop).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BaseServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_MoveStraight, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Base.V1.MoveStraightRequest, global::Proto.Api.Component.Base.V1.MoveStraightResponse>(serviceImpl.MoveStraight));
      serviceBinder.AddMethod(__Method_Spin, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Base.V1.SpinRequest, global::Proto.Api.Component.Base.V1.SpinResponse>(serviceImpl.Spin));
      serviceBinder.AddMethod(__Method_SetPower, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Base.V1.SetPowerRequest, global::Proto.Api.Component.Base.V1.SetPowerResponse>(serviceImpl.SetPower));
      serviceBinder.AddMethod(__Method_SetVelocity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Base.V1.SetVelocityRequest, global::Proto.Api.Component.Base.V1.SetVelocityResponse>(serviceImpl.SetVelocity));
      serviceBinder.AddMethod(__Method_Stop, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Base.V1.StopRequest, global::Proto.Api.Component.Base.V1.StopResponse>(serviceImpl.Stop));
    }

  }
}
#endregion
