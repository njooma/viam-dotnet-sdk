// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/api/component/imu/v1/imu.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Proto.Api.Component.Imu.V1 {
  /// <summary>
  /// IMUService services all IMUs associated with a robot
  /// </summary>
  public static partial class IMUService
  {
    static readonly string __ServiceName = "proto.api.component.imu.v1.IMUService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest> __Marshaller_proto_api_component_imu_v1_ReadAngularVelocityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse> __Marshaller_proto_api_component_imu_v1_ReadAngularVelocityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadOrientationRequest> __Marshaller_proto_api_component_imu_v1_ReadOrientationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadOrientationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadOrientationResponse> __Marshaller_proto_api_component_imu_v1_ReadOrientationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadOrientationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest> __Marshaller_proto_api_component_imu_v1_ReadAccelerationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse> __Marshaller_proto_api_component_imu_v1_ReadAccelerationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest> __Marshaller_proto_api_component_imu_v1_ReadMagnetometerRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse> __Marshaller_proto_api_component_imu_v1_ReadMagnetometerResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest, global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse> __Method_ReadAngularVelocity = new grpc::Method<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest, global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadAngularVelocity",
        __Marshaller_proto_api_component_imu_v1_ReadAngularVelocityRequest,
        __Marshaller_proto_api_component_imu_v1_ReadAngularVelocityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Imu.V1.ReadOrientationRequest, global::Proto.Api.Component.Imu.V1.ReadOrientationResponse> __Method_ReadOrientation = new grpc::Method<global::Proto.Api.Component.Imu.V1.ReadOrientationRequest, global::Proto.Api.Component.Imu.V1.ReadOrientationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadOrientation",
        __Marshaller_proto_api_component_imu_v1_ReadOrientationRequest,
        __Marshaller_proto_api_component_imu_v1_ReadOrientationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest, global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse> __Method_ReadAcceleration = new grpc::Method<global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest, global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadAcceleration",
        __Marshaller_proto_api_component_imu_v1_ReadAccelerationRequest,
        __Marshaller_proto_api_component_imu_v1_ReadAccelerationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest, global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse> __Method_ReadMagnetometer = new grpc::Method<global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest, global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReadMagnetometer",
        __Marshaller_proto_api_component_imu_v1_ReadMagnetometerRequest,
        __Marshaller_proto_api_component_imu_v1_ReadMagnetometerResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Proto.Api.Component.Imu.V1.ImuReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IMUService</summary>
    [grpc::BindServiceMethod(typeof(IMUService), "BindService")]
    public abstract partial class IMUServiceBase
    {
      /// <summary>
      /// ReadAngularVelocity returns the most recent angular velocity reading from the given IMU.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse> ReadAngularVelocity(global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ReadOrientation returns the most recent orientation reading from the given IMU.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Imu.V1.ReadOrientationResponse> ReadOrientation(global::Proto.Api.Component.Imu.V1.ReadOrientationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ReadAcceleration returns the most recent acceleration reading from the given IMU.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse> ReadAcceleration(global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// ReadMagnetometer returns the most recent magnetometer reading from the given IMU, if avaiable
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse> ReadMagnetometer(global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for IMUService</summary>
    public partial class IMUServiceClient : grpc::ClientBase<IMUServiceClient>
    {
      /// <summary>Creates a new client for IMUService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IMUServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IMUService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public IMUServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IMUServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected IMUServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// ReadAngularVelocity returns the most recent angular velocity reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse ReadAngularVelocity(global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadAngularVelocity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadAngularVelocity returns the most recent angular velocity reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse ReadAngularVelocity(global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadAngularVelocity, null, options, request);
      }
      /// <summary>
      /// ReadAngularVelocity returns the most recent angular velocity reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse> ReadAngularVelocityAsync(global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadAngularVelocityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadAngularVelocity returns the most recent angular velocity reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse> ReadAngularVelocityAsync(global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadAngularVelocity, null, options, request);
      }
      /// <summary>
      /// ReadOrientation returns the most recent orientation reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadOrientationResponse ReadOrientation(global::Proto.Api.Component.Imu.V1.ReadOrientationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadOrientation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadOrientation returns the most recent orientation reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadOrientationResponse ReadOrientation(global::Proto.Api.Component.Imu.V1.ReadOrientationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadOrientation, null, options, request);
      }
      /// <summary>
      /// ReadOrientation returns the most recent orientation reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadOrientationResponse> ReadOrientationAsync(global::Proto.Api.Component.Imu.V1.ReadOrientationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadOrientationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadOrientation returns the most recent orientation reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadOrientationResponse> ReadOrientationAsync(global::Proto.Api.Component.Imu.V1.ReadOrientationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadOrientation, null, options, request);
      }
      /// <summary>
      /// ReadAcceleration returns the most recent acceleration reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse ReadAcceleration(global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadAcceleration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadAcceleration returns the most recent acceleration reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse ReadAcceleration(global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadAcceleration, null, options, request);
      }
      /// <summary>
      /// ReadAcceleration returns the most recent acceleration reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse> ReadAccelerationAsync(global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadAccelerationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadAcceleration returns the most recent acceleration reading from the given IMU.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse> ReadAccelerationAsync(global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadAcceleration, null, options, request);
      }
      /// <summary>
      /// ReadMagnetometer returns the most recent magnetometer reading from the given IMU, if avaiable
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse ReadMagnetometer(global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadMagnetometer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadMagnetometer returns the most recent magnetometer reading from the given IMU, if avaiable
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse ReadMagnetometer(global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReadMagnetometer, null, options, request);
      }
      /// <summary>
      /// ReadMagnetometer returns the most recent magnetometer reading from the given IMU, if avaiable
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse> ReadMagnetometerAsync(global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReadMagnetometerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ReadMagnetometer returns the most recent magnetometer reading from the given IMU, if avaiable
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse> ReadMagnetometerAsync(global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReadMagnetometer, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override IMUServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IMUServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(IMUServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_ReadAngularVelocity, serviceImpl.ReadAngularVelocity)
          .AddMethod(__Method_ReadOrientation, serviceImpl.ReadOrientation)
          .AddMethod(__Method_ReadAcceleration, serviceImpl.ReadAcceleration)
          .AddMethod(__Method_ReadMagnetometer, serviceImpl.ReadMagnetometer).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IMUServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_ReadAngularVelocity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Imu.V1.ReadAngularVelocityRequest, global::Proto.Api.Component.Imu.V1.ReadAngularVelocityResponse>(serviceImpl.ReadAngularVelocity));
      serviceBinder.AddMethod(__Method_ReadOrientation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Imu.V1.ReadOrientationRequest, global::Proto.Api.Component.Imu.V1.ReadOrientationResponse>(serviceImpl.ReadOrientation));
      serviceBinder.AddMethod(__Method_ReadAcceleration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Imu.V1.ReadAccelerationRequest, global::Proto.Api.Component.Imu.V1.ReadAccelerationResponse>(serviceImpl.ReadAcceleration));
      serviceBinder.AddMethod(__Method_ReadMagnetometer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Proto.Api.Component.Imu.V1.ReadMagnetometerRequest, global::Proto.Api.Component.Imu.V1.ReadMagnetometerResponse>(serviceImpl.ReadMagnetometer));
    }

  }
}
#endregion
